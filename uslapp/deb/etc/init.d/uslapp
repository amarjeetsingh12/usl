#!/bin/bash

### BEGIN INIT INFO
# Provides:          uslapp
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the gamification service
# Description:       This file is used to start the daemon
#                    and should be placed in /etc/init.d
### END INIT INFO



HOST_IP=$(hostname -f)
PIDFILE=/var/run/uslapp/uslapp.pid
SCREENOUT=/dev/null

PAC=uslapp
PAC_GROUP="<your-group>"
PAC_USER="<your-user>"


### Helper Functions ###

function print_help() {
    echo "Usage: uslapp submit|stop"
}

function print_help_submit() {
    echo "Usage: uslapp submit {clientId} {environment}"
}


#Public Functions
function submit() {
    echo "Removing Apps"
    fileName="/<path-to-spark>/conf/slaves"
    for line in $(cat $fileName ) ;
    do
        sudo -u spark-user ssh spark-user@"$line" 'rm -rf /<path-to-spark>/work/*'
    done
    echo "Starting uslapp Service"
    driverEnvFile="/usr/share/uslapp/driver-env.sh"
    for line in $(cat $driverEnvFile ) ;
     do
       export ${line}
    done
    start-stop-daemon --start --oknodo \
                    --umask 000 --user ${PAC_USER} --chuid ${PAC_USER}  --group ${PAC_GROUP} \
                    --make-pidfile --pidfile ${PIDFILE} \
                    --exec /<path-to-spark>/bin/spark-submit -- \
                    --class com.flipkart.gap.usl.app.execution.UserStateDimensionJob \
                    --master ${MASTER_ADDR} \
                    --deploy-mode cluster \
                    --conf "spark.driver.extraJavaOptions= -Dgap.usl.clientId=${1} -Dgap.usl.environment=${2}" \
                    --supervise \
                    --num-executors ${NUM_EXECUTORS} \
                    --driver-memory ${DRIVER_MEMORY} \
                    --executor-memory ${EXECUTOR_MEMORY} \
                    --executor-cores ${EXECUTOR_CORES} \
                     /usr/lib/${PAC}/${PAC}.jar >> ${SCREENOUT} &

    #Sync Start by waiting till service is up.
    status=1
    counter=0
    while [[ ${status} -ne 0 ]] && [[ ${counter} -lt 10 ]]; do
        sleep 2;
        counter=$(($counter+1));
        echo "Waiting For uslapp to Start $counter";
        status=$?
    done

    return $?
}

function stop() {
    echo "Stopping uslapp Service"

    fileName="/<path-to-spark>/conf/slaves"
    for line in $(cat $fileName ) ;
    do
        sudo -u spark-user ssh spark-user@"$line" 'rm -rf /<path-to-spark>/work/*'
    done
    start-stop-daemon --stop --quiet --pidfile ${PIDFILE} --retry=TERM/30/KILL/5
    if [ -e ${PIDFILE} ]
        then sudo rm -rf ${PIDFILE}
    fi
    return 0
}

if [ $# -eq 0 ]; then
    print_help
    exit 1
fi

if [ ${1} = "submit" -a $# -lt 3 ]; then
    print_help_submit
    exit 1
fi

if [ ${1} = "submit" -o ${1} = "stop" ]; then
    :
else
   print_help
   exit 1
fi

${1} $2 $3
